{"version":3,"file":"slider.min.js","mappings":"iVAMMA,EAAAA,WAMJ,WAAYC,EAAgCC,GAAiB,WAS3D,G,4FAT2D,+BAHtC,eAGsC,oBAFxC,aAIjBC,KAAKD,YADQE,IAAXF,EACY,CACZG,QAAS,GAGGH,EAGQ,iBAAbD,GAET,GADAE,KAAKG,KAAOC,SAASC,iBAAiBP,GACb,IAArBE,KAAKG,KAAKG,OACZ,MAAM,IAAIC,MAAJ,mBAAsBT,EAAtB,oBAGRE,KAAKG,KAAO,CAACL,GAGfE,KAAKG,KAAKK,SAAQ,SAACC,GACjB,EAAKC,WAAWD,M,+CAIpB,SAAmBA,GAAiB,WAC5BE,EAA8BF,EAAGG,cAAcZ,KAAKa,cAC1D,GAAgB,OAAZF,EAAJ,CAIA,IAAMG,EAAmCH,EAAQN,iBAC/CL,KAAKe,YAEDC,EAASZ,SAASa,cAAc,OAEtCH,EAAQN,SAAQ,SAACU,EAAMC,GACjBA,GAAS,EAAKpB,OAAOG,SACvBc,EAAOI,OAAOF,MAIlBF,EAAOK,aAAa,cAAeC,OAAON,EAAOO,eACjDP,EAAOQ,MAAMC,OAAS,MACtBT,EAAOQ,MAAME,UAAY,MACzBV,EAAOQ,MAAMG,WAAa,8BAC1BX,EAAOQ,MAAMI,SAAW,SACxBjB,EAAQS,OAAOJ,GAEf,IAAMa,EAAQzB,SAASa,cAAc,OACrCY,EAAMC,iBAAiB,QAAS9B,KAAK+B,QACrCF,EAAMG,UAAY,gBAClBH,EAAMI,UAAY,cAClBtB,EAAQS,OAAOS,M,oBAGjB,SAAOK,GACL,IAAML,EAAqBK,EAAEC,cACvBnB,EAAsBa,EAAMO,gBAElCpB,EAAOQ,MAAMC,OAAb,OACAT,EAAOQ,MAAME,UAAb,SAEAG,EAAMQ,c,sEAnEJxC,GAuEN,Y","sources":["webpack://YtSlider/./src/index.ts"],"sourcesContent":["import \"./slider.css\";\n\ninterface Config {\n  visible: number;\n}\n\nclass Slider {\n  private config: Config;\n  private root: NodeListOf<HTMLElement> | HTMLElement[];\n  private entryWrapper = \".yt-entries\";\n  private entryClass = \".yt-entry\";\n\n  constructor(selector: string | HTMLElement, config?: Config) {\n    if (config === undefined) {\n      this.config = {\n        visible: 3,\n      };\n    } else {\n      this.config = config;\n    }\n\n    if (typeof selector === \"string\") {\n      this.root = document.querySelectorAll(selector);\n      if (this.root.length === 0) {\n        throw new Error(`Selector ${selector} not found`);\n      }\n    } else {\n      this.root = [selector];\n    }\n\n    this.root.forEach((el) => {\n      this.initSlider(el);\n    });\n  }\n\n  private initSlider(el: HTMLElement) {\n    const wrapper: HTMLElement | null = el.querySelector(this.entryWrapper);\n    if (wrapper === null) {\n      return;\n    }\n\n    const entries: NodeListOf<HTMLElement> = wrapper.querySelectorAll(\n      this.entryClass\n    );\n    const hidden = document.createElement(\"div\");\n\n    entries.forEach((item, index) => {\n      if (index >= this.config.visible) {\n        hidden.append(item);\n      }\n    });\n\n    hidden.setAttribute(\"data-height\", String(hidden.offsetHeight));\n    hidden.style.height = \"0px\";\n    hidden.style.maxHeight = \"0px\";\n    hidden.style.transition = \"max-height 0.5s ease-in-out\";\n    hidden.style.overflow = \"hidden\";\n    wrapper.append(hidden);\n\n    const arrow = document.createElement(\"div\");\n    arrow.addEventListener(\"click\", this.onShow);\n    arrow.className = \"yt-arrow-down\";\n    arrow.innerHTML = \"<div></div>\";\n    wrapper.append(arrow);\n  }\n\n  onShow(e: Event) {\n    const arrow = <HTMLElement>e.currentTarget;\n    const hidden = <HTMLElement>arrow.previousSibling;\n\n    hidden.style.height = `auto`;\n    hidden.style.maxHeight = `1000px`;\n\n    arrow.remove();\n  }\n}\n\nexport default Slider;\n"],"names":["Slider","selector","config","this","undefined","visible","root","document","querySelectorAll","length","Error","forEach","el","initSlider","wrapper","querySelector","entryWrapper","entries","entryClass","hidden","createElement","item","index","append","setAttribute","String","offsetHeight","style","height","maxHeight","transition","overflow","arrow","addEventListener","onShow","className","innerHTML","e","currentTarget","previousSibling","remove"],"sourceRoot":""}